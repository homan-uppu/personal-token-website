/* 
  NOTE: CSS alone cannot fully prevent scroll jumps caused by dynamic content changes (like expanding/collapsing accordions) if the content above the viewport changes height. 
  The property `overflow-anchor: none;` helps, but for a robust solution, JS is needed to manually restore scroll position.
  See Accordion/index.tsx for scroll position handling.
*/
.container {
  display: flex;
  flex-direction: column;
  width: 100%;
  padding: 24px;
  gap: 1rem;
  background: var(--layer2-bg-color);
  border-radius: 24px;
  margin-bottom: 24px;

  /* Prevent scroll anchoring to avoid scroll jumps on expand/collapse */
  overflow-anchor: none;
  /* overflow: hidden; */
}

.titleContainer {
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  font-weight: 410;
  overflow-anchor: none;
}

.innerContent {
  color: rgba(0, 0, 0, 0.55);
  overflow-anchor: none;
}
